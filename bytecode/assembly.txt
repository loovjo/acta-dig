# Bytecode assembly

Instructions are from vm.txt. Arguments are specified after intstructions. Registers are specified
like "r34". The meta-instruction "db", taking one byte as an argument, writes the argument directly
to the output.

Variables in the assembler are not true variables in the sense that they cannot be reassigned.

The compiler keeps track of counters for different categories, which can be used to automatically
generate numbers for things like functions, atoms etc. The final value of a counter is assigned to
a variable, 'c_' + "countername"

Comments start with ";" and ends at the end of the line.

Macros are specified by "@macro". Built in macros are:

@label "name"
    Assigns the variable "name" to the current position in the output.

@count "category" "name"
    This sets the variable "name" to the current value of the counter of the category, then
    increments it.

@= "name"
    Inserts the value of the variable "name" as a 8-byte integer in the file.
    This macro is only evaluated after the output is generated. It expands into a dummy 8-byte value
    and replaces it with the true value afterwards. This makes it possible to refer to a variable
    before it has been assigned.

@program "name"
    This macro expands into:

    @label "name"
    @count "programs" "name" + '_idx'

@end "name"
    Expands into:

    @label "name" ++ '_end'

@pref "name"
    Expands into

    @= "name"
    @= "name" ++ '_end'
    @count "prefs" "name" + '_pref"

@string "content"
    Places the string "content" into the binary, prefixed with its length

@rstring "content"
    Like @string, but without the length
